Traceback (most recent call last):
  File "/home/boris.grillborzer/PycharmProjects/PoseEstimationFPHAB/modelundmainfun.py", line 73, in <module>
    train()
  File "/home/boris.grillborzer/PycharmProjects/PoseEstimationFPHAB/modelundmainfun.py", line 55, in train
    out = model(data.x, data.edge_index, data.batch)  # Perform a single forward pass.
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric_temporal/nn/recurrent/temporalgcn.py", line 126, in forward
    Z = self._calculate_update_gate(X, edge_index, edge_weight, H)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric_temporal/nn/recurrent/temporalgcn.py", line 83, in _calculate_update_gate
    Z = torch.cat([self.conv_z(X, edge_index, edge_weight), H], axis=1)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 241, in forward
    edge_index, edge_weight = gcn_norm(  # yapf: disable
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 99, in gcn_norm
    edge_index, edge_weight = add_remaining_self_loops(
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric/utils/loop.py", line 642, in add_remaining_self_loops
    loop_attr[edge_index[0][inv_mask]] = edge_attr[inv_mask]
IndexError: The shape of the mask [20] at index 0 does not match the shape of the indexed tensor [21] at index 0

Die add_slef_loop bei GCONV auf False gesetzt, dann kam:

Traceback (most recent call last):
  File "/home/boris.grillborzer/PycharmProjects/PoseEstimationFPHAB/modelundmainfun.py", line 73, in <module>
    train()
  File "/home/boris.grillborzer/PycharmProjects/PoseEstimationFPHAB/modelundmainfun.py", line 55, in train
    out = model(data.x, data.edge_index, data.batch)  # Perform a single forward pass.
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric_temporal/nn/recurrent/temporalgcn.py", line 126, in forward
    Z = self._calculate_update_gate(X, edge_index, edge_weight, H)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric_temporal/nn/recurrent/temporalgcn.py", line 83, in _calculate_update_gate
    Z = torch.cat([self.conv_z(X, edge_index, edge_weight), H], axis=1)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 241, in forward
    edge_index, edge_weight = gcn_norm(  # yapf: disable
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 108, in gcn_norm
    deg = scatter(edge_weight, idx, dim=0, dim_size=num_nodes, reduce='sum')
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric/utils/_scatter.py", line 74, in scatter
    index = broadcast(index, src, dim)
  File "/home/boris.grillborzer/miniconda3/envs/gggten/lib/python3.10/site-packages/torch_geometric/utils/_scatter.py", line 195, in broadcast
    return src.view(size).expand_as(ref)
RuntimeError: The expanded size of the tensor (21) must match the existing size (20) at non-singleton dimension 0.  Target sizes: [21].  Tensor sizes: [20]